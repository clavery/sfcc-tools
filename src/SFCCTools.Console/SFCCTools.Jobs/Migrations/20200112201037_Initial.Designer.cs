// <auto-generated />
using System;
using System.Net;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SFCCTools.Jobs;

namespace SFCCTools.Jobs.Migrations
{
    [DbContext(typeof(BIDatabaseContext))]
    [Migration("20200112201037_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SFCCTools.Data.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<string>("BillingCountryCode")
                        .HasColumnType("text");

                    b.Property<string>("BillingStateCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomerNo")
                        .HasColumnType("text");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProductTotal")
                        .HasColumnType("numeric");

                    b.Property<IPAddress>("RemoteHost")
                        .HasColumnType("inet");

                    b.Property<string>("ShippingCountryCode")
                        .HasColumnType("text");

                    b.Property<string>("ShippingMethod")
                        .HasColumnType("text");

                    b.Property<string>("ShippingStateCode")
                        .HasColumnType("text");

                    b.Property<decimal>("ShippingTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TaxTotal")
                        .HasColumnType("numeric");

                    b.HasKey("OrderId");

                    b.HasIndex("BillingCountryCode");

                    b.HasIndex("BillingStateCode");

                    b.HasIndex("CreationDate");

                    b.HasIndex("CustomerNo");

                    b.HasIndex("RemoteHost");

                    b.HasIndex("ShippingCountryCode");

                    b.HasIndex("ShippingMethod");

                    b.HasIndex("ShippingStateCode");

                    b.HasIndex("Status");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SFCCTools.Data.PaymentMethod", b =>
                {
                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .HasColumnType("text");

                    b.HasKey("Index", "OrderId");

                    b.HasIndex("Method");

                    b.HasIndex("OrderId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("SFCCTools.Data.ProductLineItem", b =>
                {
                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .HasColumnType("text");

                    b.HasKey("Index", "OrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLineItem");
                });

            modelBuilder.Entity("SFCCTools.Data.RuntimeConfig", b =>
                {
                    b.Property<string>("RuntimeConfigId")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateConfig")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StringConfig")
                        .HasColumnType("text");

                    b.HasKey("RuntimeConfigId");

                    b.ToTable("RuntimeConfigs");
                });

            modelBuilder.Entity("SFCCTools.Data.PaymentMethod", b =>
                {
                    b.HasOne("SFCCTools.Data.Order", null)
                        .WithMany("PaymentMethods")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFCCTools.Data.ProductLineItem", b =>
                {
                    b.HasOne("SFCCTools.Data.Order", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
